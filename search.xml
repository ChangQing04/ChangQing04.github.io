<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Redis 基础与应用</title>
      <link href="/2025/09/14/redis/"/>
      <url>/2025/09/14/redis/</url>
      
        <content type="html"><![CDATA[<h1 id="Redis-基础与应用"><a href="#Redis-基础与应用" class="headerlink" title="Redis 基础与应用"></a>Redis 基础与应用</h1><p>Redis（Remote Dictionary Server）是一种基于 <strong>内存</strong> 的高性能键值对（Key-Value）数据库，常用于 <strong>缓存、分布式锁、消息队列、排行榜、计数器</strong> 等场景。  </p><hr><h2 id="1-Redis-的特点"><a href="#1-Redis-的特点" class="headerlink" title="1. Redis 的特点"></a>1. Redis 的特点</h2><ul><li><strong>高性能</strong>：数据存放在内存，读写速度极快（10w+ QPS）。  </li><li><strong>数据结构丰富</strong>：支持 <code>String</code>、<code>List</code>、<code>Hash</code>、<code>Set</code>、<code>ZSet</code> 等。  </li><li><strong>持久化</strong>：支持 RDB 快照和 AOF 日志，保证数据安全。  </li><li><strong>支持集群</strong>：支持主从复制、哨兵模式、分片集群。  </li><li><strong>多语言支持</strong>：几乎所有主流编程语言都支持 Redis 客户端。</li></ul><hr><h2 id="2-Redis-常用数据结构"><a href="#2-Redis-常用数据结构" class="headerlink" title="2. Redis 常用数据结构"></a>2. Redis 常用数据结构</h2><table><thead><tr><th>数据类型</th><th>存储内容</th><th>常见命令</th></tr></thead><tbody><tr><td>String</td><td>字符串、数字</td><td><code>SET</code> &#x2F; <code>GET</code> &#x2F; <code>INCR</code></td></tr><tr><td>Hash</td><td>键值对集合（类似 Map）</td><td><code>HSET</code> &#x2F; <code>HGET</code> &#x2F; <code>HGETALL</code></td></tr><tr><td>List</td><td>有序链表（消息队列常用）</td><td><code>LPUSH</code> &#x2F; <code>RPUSH</code> &#x2F; <code>LPOP</code></td></tr><tr><td>Set</td><td>无序集合（去重、抽奖）</td><td><code>SADD</code> &#x2F; <code>SMEMBERS</code> &#x2F; <code>SPOP</code></td></tr><tr><td>ZSet</td><td>有序集合（排行榜）</td><td><code>ZADD</code> &#x2F; <code>ZRANGE</code> &#x2F; <code>ZREVRANK</code></td></tr></tbody></table><hr><h2 id="3-Redis-持久化机制"><a href="#3-Redis-持久化机制" class="headerlink" title="3. Redis 持久化机制"></a>3. Redis 持久化机制</h2><ul><li><p><strong>RDB（快照）</strong><br>定期将内存中的数据保存到磁盘文件（默认 <code>dump.rdb</code>）。  </p><ul><li>优点：适合大规模恢复，文件紧凑。  </li><li>缺点：可能丢失最后一次快照之后的数据。</li></ul></li><li><p><strong>AOF（日志）</strong><br>记录每一条写操作，默认 <code>appendonly.aof</code>。  </p><ul><li>优点：数据更安全，最多丢失 1 秒数据。  </li><li>缺点：文件体积比 RDB 大，恢复速度慢。</li></ul></li></ul><p>生产环境常用 <strong>RDB + AOF 混合持久化</strong>。  </p><hr><h2 id="4-Redis-高级应用场景"><a href="#4-Redis-高级应用场景" class="headerlink" title="4. Redis 高级应用场景"></a>4. Redis 高级应用场景</h2><h3 id="4-1-缓存"><a href="#4-1-缓存" class="headerlink" title="4.1 缓存"></a>4.1 缓存</h3><ul><li>用于热点数据存储，减少数据库压力。  </li><li>常见策略：  <ul><li>缓存穿透：布隆过滤器、缓存空对象  </li><li>缓存击穿：热点 Key 设置互斥锁  </li><li>缓存雪崩：过期时间加随机值、分布式限流</li></ul></li></ul><h3 id="4-2-分布式锁"><a href="#4-2-分布式锁" class="headerlink" title="4.2 分布式锁"></a>4.2 分布式锁</h3><p>使用 <code>SETNX key value EX 30</code> 实现分布式锁，并通过 Lua 脚本保证释放锁的原子性。  </p><h3 id="4-3-消息队列"><a href="#4-3-消息队列" class="headerlink" title="4.3 消息队列"></a>4.3 消息队列</h3><p>利用 <code>List</code> 或 <code>Stream</code> 实现消息队列。  </p><ul><li><code>LPUSH + BRPOP</code> → 简单队列  </li><li><code>XADD + XREAD</code> → 高级队列</li></ul><h3 id="4-4-计数器-排行榜"><a href="#4-4-计数器-排行榜" class="headerlink" title="4.4 计数器 &#x2F; 排行榜"></a>4.4 计数器 &#x2F; 排行榜</h3><ul><li><code>INCR key</code> 实现计数器  </li><li><code>ZADD</code> 实现排行榜（分数为权重）</li></ul><hr><h2 id="5-Redis-集群架构"><a href="#5-Redis-集群架构" class="headerlink" title="5. Redis 集群架构"></a>5. Redis 集群架构</h2><h3 id="主从复制"><a href="#主从复制" class="headerlink" title="主从复制"></a>主从复制</h3><ul><li>主库负责写，从库负责读，提高性能。  </li><li>常用于读写分离、数据冗余。</li></ul><h3 id="哨兵模式"><a href="#哨兵模式" class="headerlink" title="哨兵模式"></a>哨兵模式</h3><ul><li>监控主从状态，自动故障转移。</li></ul><h3 id="分片集群"><a href="#分片集群" class="headerlink" title="分片集群"></a>分片集群</h3><ul><li>数据按槽（slot）分布到多个节点。  </li><li>解决单机内存瓶颈。</li></ul><hr><h2 id="6-常用-Redis-命令速查"><a href="#6-常用-Redis-命令速查" class="headerlink" title="6. 常用 Redis 命令速查"></a>6. 常用 Redis 命令速查</h2><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 连接 Redis</span><br>redis-cli -h 127.0.0.1 -p 6379<br><br><span class="hljs-comment"># 字符串操作</span><br>SET user:1 <span class="hljs-string">&quot;Tom&quot;</span><br>GET user:1<br>INCR count<br><br><span class="hljs-comment"># 哈希</span><br>HSET user:1 name <span class="hljs-string">&quot;Tom&quot;</span> age 20<br>HGET user:1 name<br>HGETALL user:1<br><br><span class="hljs-comment"># 列表</span><br>LPUSH queue task1<br>RPUSH queue task2<br>LPOP queue<br><br><span class="hljs-comment"># 集合</span><br>SADD tags redis mysql<br>SMEMBERS tags<br>SPOP tags<br><br><span class="hljs-comment"># 有序集合</span><br>ZADD rank 100 Tom<br>ZRANGE rank 0 -1 WITHSCORES<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
            <tag> 数据库 </tag>
            
            <tag> 缓存 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/09/11/hello-world/"/>
      <url>/2025/09/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
